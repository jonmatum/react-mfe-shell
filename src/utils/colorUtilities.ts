
/**
 * Auto-generated Color Utilities
 * Generated by Design System CLI v1.0.0
 */


// Primary color variants

export const createPrimarySolidVariant = () => {
  const baseColor = 'primary';
  return createSemanticColorVariant(baseColor, 'solid');
};
export const createPrimarySoftVariant = () => {
  const baseColor = 'primary';
  return createSemanticColorVariant(baseColor, 'soft');
};
export const createPrimaryOutlineVariant = () => {
  const baseColor = 'primary';
  return createSemanticColorVariant(baseColor, 'outline');
};
export const createPrimaryGhostVariant = () => {
  const baseColor = 'primary';
  return createSemanticColorVariant(baseColor, 'ghost');
};

// Secondary color variants

export const createSecondarySolidVariant = () => {
  const baseColor = 'secondary';
  return createSemanticColorVariant(baseColor, 'solid');
};
export const createSecondarySoftVariant = () => {
  const baseColor = 'secondary';
  return createSemanticColorVariant(baseColor, 'soft');
};
export const createSecondaryOutlineVariant = () => {
  const baseColor = 'secondary';
  return createSemanticColorVariant(baseColor, 'outline');
};
export const createSecondaryGhostVariant = () => {
  const baseColor = 'secondary';
  return createSemanticColorVariant(baseColor, 'ghost');
};

// Success color variants

export const createSuccessSolidVariant = () => {
  const baseColor = 'success';
  return createSemanticColorVariant(baseColor, 'solid');
};
export const createSuccessSoftVariant = () => {
  const baseColor = 'success';
  return createSemanticColorVariant(baseColor, 'soft');
};
export const createSuccessOutlineVariant = () => {
  const baseColor = 'success';
  return createSemanticColorVariant(baseColor, 'outline');
};
export const createSuccessGhostVariant = () => {
  const baseColor = 'success';
  return createSemanticColorVariant(baseColor, 'ghost');
};

// Warning color variants

export const createWarningSolidVariant = () => {
  const baseColor = 'warning';
  return createSemanticColorVariant(baseColor, 'solid');
};
export const createWarningSoftVariant = () => {
  const baseColor = 'warning';
  return createSemanticColorVariant(baseColor, 'soft');
};
export const createWarningOutlineVariant = () => {
  const baseColor = 'warning';
  return createSemanticColorVariant(baseColor, 'outline');
};
export const createWarningGhostVariant = () => {
  const baseColor = 'warning';
  return createSemanticColorVariant(baseColor, 'ghost');
};

// Error color variants

export const createErrorSolidVariant = () => {
  const baseColor = 'danger';
  return createSemanticColorVariant(baseColor, 'solid');
};
export const createErrorSoftVariant = () => {
  const baseColor = 'danger';
  return createSemanticColorVariant(baseColor, 'soft');
};
export const createErrorOutlineVariant = () => {
  const baseColor = 'danger';
  return createSemanticColorVariant(baseColor, 'outline');
};
export const createErrorGhostVariant = () => {
  const baseColor = 'danger';
  return createSemanticColorVariant(baseColor, 'ghost');
};

// Info color variants

export const createInfoSolidVariant = () => {
  const baseColor = 'info';
  return createSemanticColorVariant(baseColor, 'solid');
};
export const createInfoSoftVariant = () => {
  const baseColor = 'info';
  return createSemanticColorVariant(baseColor, 'soft');
};
export const createInfoOutlineVariant = () => {
  const baseColor = 'info';
  return createSemanticColorVariant(baseColor, 'outline');
};
export const createInfoGhostVariant = () => {
  const baseColor = 'info';
  return createSemanticColorVariant(baseColor, 'ghost');
};


// Batch color variant generator
export const generateColorVariants = (colors: string[], type: 'solid' | 'soft' | 'outline' | 'ghost' = 'soft') => {
  return colors.reduce((acc, color) => {
    acc[color] = createSemanticColorVariant(color, type);
    return acc;
  }, {} as Record<string, string>);
};
