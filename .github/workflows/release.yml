name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write
  pages: write
  id-token: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      library_release_created: ${{ steps.release.outputs.release_created }}
      demo_release_created: ${{ steps.release.outputs['demo--release_created'] }}
      library_tag_name: ${{ steps.release.outputs.tag_name }}
      demo_tag_name: ${{ steps.release.outputs['demo--tag_name'] }}
      library_version: ${{ steps.release.outputs.version }}
      demo_version: ${{ steps.release.outputs['demo--version'] }}
    steps:
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

  # Build and publish library when a library release is created
  build-and-publish-library:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.library_release_created == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          # Clean install to avoid cached native bindings issues
          rm -rf node_modules package-lock.json
          npm install
          # Reinstall SWC to ensure correct native bindings
          npm install --no-save @swc/core @swc/helpers

      - name: Run tests
        run: npm run test:run

      - name: Build library
        run: npm run build:lib

      - name: Run type check
        run: npm run type-check

      # Publish to npm
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: library-build-artifacts-${{ needs.release-please.outputs.library_tag_name }}
          path: |
            dist/
            package.json
            README.md
            CHANGELOG.md

  # Deploy demo when any release is created
  deploy-demo:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created == 'true' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: |
          # Clean install to avoid cached native bindings issues
          rm -rf node_modules package-lock.json
          npm install
          # Reinstall SWC to ensure correct native bindings
          npm install --no-save @swc/core @swc/helpers

      - name: Build library
        run: npm run build:lib

      - name: Build demo
        run: npm run build:demo

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist-demo'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Upload demo artifacts
        uses: actions/upload-artifact@v4
        with:
          name: demo-build-artifacts-${{ github.sha }}
          path: |
            dist-demo/
            demo/package.json
            demo/CHANGELOG.md
