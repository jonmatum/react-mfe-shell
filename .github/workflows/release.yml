name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

  # Build and publish when a release is created
  build-and-publish:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:run

      - name: Run code analysis
        run: npm run analyze:json > code-analysis-${{ needs.release-please.outputs.tag_name }}.json

      - name: Build library
        run: npm run build:lib

      - name: Run type check
        run: npm run type-check

      # Uncomment to publish to npm
      # - name: Publish to npm
      #   run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ needs.release-please.outputs.tag_name }}
          path: |
            dist/
            package.json
            README.md
            CHANGELOG.md

      - name: Upload code analysis
        uses: actions/upload-artifact@v4
        with:
          name: code-analysis-${{ needs.release-please.outputs.tag_name }}
          path: code-analysis-${{ needs.release-please.outputs.tag_name }}.json

  # Deploy example to GitHub Pages only on releases
  deploy-example:
    runs-on: ubuntu-latest
    needs: [release-please, build-and-publish]
    if: ${{ needs.release-please.outputs.release_created }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install main dependencies
        run: npm ci

      - name: Build library
        run: npm run build:lib

      - name: Install example dependencies
        run: |
          cd example
          npm ci

      - name: Build example for GitHub Pages
        run: |
          cd example
          npm run build
          # Add base path for GitHub Pages if needed
          # sed -i 's|/assets/|./assets/|g' dist/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./example/dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
